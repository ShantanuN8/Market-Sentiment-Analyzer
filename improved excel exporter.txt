from openpyxl import Workbook
from openpyxl.styles import Font, PatternFill, Alignment, Border, Side
from datetime import datetime
import os

class ExcelExporter:
    def export(self, data, summary=None, filename='market_sentiment_report.xlsx'):
        wb = Workbook()
        ws = wb.active
        ws.title = 'Market Sentiment'

        headers = [
            'Timestamp', 'Source', 'Headline',
            'TextBlob Score', 'VADER Score',
            'Final Sentiment', 'Final Score', 'URL'
        ]
        ws.append(headers)

        # Define color themes
        sentiment_colors = {
            'Positive': PatternFill(start_color='C6EFCE', end_color='C6EFCE', fill_type='solid'),  # Light green
            'Negative': PatternFill(start_color='FFC7CE', end_color='FFC7CE', fill_type='solid'),  # Light red
            'Neutral':  PatternFill(start_color='C9DAF8', end_color='C9DAF8', fill_type='solid')   # Light blue
        }

        font_white = Font(color='FFFFFF')
        font_black = Font(color='000000')

        # Border style
        thin_border = Border(
            left=Side(style='thin'),
            right=Side(style='thin'),
            top=Side(style='thin'),
            bottom=Side(style='thin')
        )

        # Append data and apply styles
        for row_idx, d in enumerate(data, start=2):
            ws.append([
                d['timestamp'].strftime('%Y-%m-%d %H:%M:%S'), d['source'], d['headline'],
                round(d['textblob_score'], 3), round(d['vader_score'], 3),
                d['final_sentiment'], round(d['final_score'], 3), d['url']
            ])

            sentiment = d['final_sentiment']
            fill = sentiment_colors.get(sentiment, None)
            font = font_black if sentiment == 'Neutral' else font_white

            # Apply fill + font to the "Final Sentiment" cell
            sentiment_cell = ws.cell(row=row_idx, column=6)
            sentiment_cell.fill = fill
            sentiment_cell.font = font

        # Style headers
        for cell in ws[1]:
            cell.font = Font(bold=True, color='FFFFFF')
            cell.fill = PatternFill(start_color='4F81BD', end_color='4F81BD', fill_type='solid')  # Dark blue
            cell.alignment = Alignment(horizontal='center', vertical='center')
            cell.border = thin_border

        # Apply formatting to all data cells
        for row in ws.iter_rows(min_row=2, max_row=ws.max_row, min_col=1, max_col=8):
            for cell in row:
                cell.alignment = Alignment(wrap_text=True, vertical='top')
                cell.border = thin_border

        # Auto-fit columns
        for col in ws.columns:
            max_length = 0
            col_letter = col[0].column_letter
            for cell in col:
                try:
                    max_length = max(max_length, len(str(cell.value)))
                except:
                    pass
            ws.column_dimensions[col_letter].width = min(max_length + 5, 60)  # Limit width

        # Save
        output_dir = os.path.join('output', 'reports')
        os.makedirs(output_dir, exist_ok=True)
        path = os.path.join(output_dir, filename)
        wb.save(path)
        return path
